enum class TokenType(val pattern: String) {
    BLOCK_COMMENT_OPEN("///*.*+"),
    BLOCK_COMMENT_CLOSE(".*+//*/"),
    SINGLE_COMMENT("//"),

    DECIMAL("[+-]?([0-9]*[.])?[0-9]+"),
    INTEGRAL("[0-9]+"),

    TYPEALIAS("typealias"),
    INTERFACE("interface"),
    CONTINUE("continue"),
    PACKAGE("package"),
    IMPORT("import"),
    RETURN("return"),
    OBJECT("object"),
    WHILE("while"),
    BREAK("break"),
    CLASS("class"),
    THROW("throw"),
    FALSE("false"),
    SUPER("super"),
    TYPEOF("typeof"),
    WHEN("when"),
    TRUE("true"),
    THIS("this"),
    NULL("null"),
    ELSE("else"),
    TRY("try"),
    VAL("val"),
    VAR("var"),
    FUN("fun"),
    FOR("for"),
    IS("is"),
    IN("in"),
    IF("if"),
    DO("do"),
    AS("as"),

    RESERVED("..."),
    EQEQEQ("==="),
    EXCLEQEQ("!=="),
    NOT_IN("!in"),
    NOT_IS("!is"),
    AS_SAFE("as?"),
    INCR("++"),
    DECR("--"),
    LTEQ("<="),
    GTEQ(">="),
    DOUBLE_EQ("=="),
    EXCLEQ("!="),
    ANDAND("&&"),
    OROR("||"),
    MULTEQ("*="),
    DIVEQ("/="),
    PEREQ("%/"),
    PLUSEQ("+="),
    MINUSEQ("-="),
    ARROW("->"),
    DOUBLE_ARROW("=>"),
    RANGE(".."),
    COLONCOLON("::"),
    LBRACKET("["),
    RBRACKET("]"),
    LBRACE("{"),
    RBRACE("}"),
    LPAR("("),
    RPAR(")"),
    DOT("."),
    MUL("*"),
    PLUS("+"),
    MINUS("-"),
    EXCL("!"),
    DIV("/"),
    PERC("%"),
    LT("<"),
    GT(">"),
    QUEST("?"),
    COLON(":"),
    SEMICOLON(";"),
    EQ("="),
    COMMA(","),
    HASH("#"),
    AT("@"),

    ID("[a-zA-Z][a-zA-Z0-9_]*"),

    ERROR(".+")
}

data class Token(val tokenType: TokenType, val lexeme: String, val position: Position)

data class Position(val row: Int, val column: Int)